{
	"_type": "export",
	"__export_format": 3,
	"__export_date": "2024-11-07T19:23:09.197Z",
	"__export_source": "insomnia.desktop.app:v6.3.2",
	"resources": [
		{
			"_id": "wrk_6c72e8697afe44cfa99f33fac2044547",
			"created": 1730654879253,
			"description": "",
			"modified": 1730654879253,
			"name": "Sdd",
			"parentId": null,
			"_type": "workspace"
		},
		{
			"_id": "env_33aab036f6e94fcfa2043432af02a06a",
			"color": null,
			"created": 1730654879633,
			"data": {},
			"isPrivate": false,
			"metaSortKey": 1730654879633,
			"modified": 1730654879633,
			"name": "New Environment",
			"parentId": "wrk_6c72e8697afe44cfa99f33fac2044547",
			"_type": "environment"
		},
		{
			"_id": "jar_67cf9e965ded434f9592b5a6dc5dbc16",
			"cookies": [],
			"created": 1730654879645,
			"modified": 1730654879645,
			"name": "Default Jar",
			"parentId": "wrk_6c72e8697afe44cfa99f33fac2044547",
			"_type": "cookie_jar"
		},
		{
			"_id": "fld_98313cd6eda043ea9087b6c2423bdda3",
			"created": 1730656476237,
			"description": "",
			"environment": {},
			"metaSortKey": -1730656476237,
			"modified": 1730656476237,
			"name": "Collections",
			"parentId": "wrk_6c72e8697afe44cfa99f33fac2044547",
			"_type": "request_group"
		},
		{
			"_id": "fld_e22ee03ebd9648cb9be5179c166993c7",
			"created": 1730656494317,
			"description": "",
			"environment": {},
			"metaSortKey": -1730656476237,
			"modified": 1730656497298,
			"name": "Records",
			"parentId": "fld_98313cd6eda043ea9087b6c2423bdda3",
			"_type": "request_group"
		},
		{
			"_id": "req_4102653d267847a69ac140095e150813",
			"authentication": {},
			"body": {
				"mimeType": "application/json",
				"text": "{\n\t\"collectionName\": \"books1\"\n}"
			},
			"created": 1730654911748,
			"description": "**Description:** creates new collection\n\n### Request body example:\n```Json\n{\n\t\"collectionName\": \"books\"\n}\n```\n**Requirements:** \"collectionName\" should be between 3 to 20 characters\n\n### Response body example:\n\n### 201 :\n```Json\n{\n  \"message\": \"Collection created successfully\",\n  \"collectionName\": \"books\"\n}\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this collection already exists\",\n    \"error\": \"Forbidden\",\n    \"statusCode\": 403\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [
				{
					"id": "pair_365087b305ab49098fb93c5a16292a62",
					"name": "Content-Type",
					"value": "application/json"
				}
			],
			"isPrivate": false,
			"metaSortKey": -1730656476337,
			"method": "POST",
			"modified": 1731007347226,
			"name": "create a Collection",
			"parameters": [],
			"parentId": "fld_98313cd6eda043ea9087b6c2423bdda3",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections",
			"_type": "request"
		},
		{
			"_id": "req_8fc966e195e64ff6a9d99da0be494e34",
			"authentication": {},
			"body": {},
			"created": 1730656050006,
			"description": "**Description:** deletes existing collection\n\n### Request url format: /collections/:collectionName\n\n**Requirements:** \"collectionName\" should be between 3 to 20 characters\n\n### Response body format:\n\n### 200 :\n\n```json\n{\n  \"message\": \"Collection deleted successfully\",\n  \"collectionName\": \"books\"\n}\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this collection doesn't exists\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1730656476287,
			"method": "DELETE",
			"modified": 1731006299921,
			"name": "delete a Collection",
			"parameters": [],
			"parentId": "fld_98313cd6eda043ea9087b6c2423bdda3",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections/books",
			"_type": "request"
		},
		{
			"_id": "req_c2675158537c43e8bb9849ec4b46433c",
			"authentication": {},
			"body": {},
			"created": 1730656501922,
			"description": "**Description:** get all or paginated records\n\n### Request url format:\n\n- /collections/:collectionName/records?limit=2&skip=3\n\n**Requirements:**\n\n- \"collectionName\" should be between 3 to 20 characters\n- \"limit\" is optional. atleast 1, default 10\n- \"skip\" is optional. atleast 0, default 0\n\n### Response body example:\n\n### 200 :\n\n```Json\n[\n  {\n    \"id\": \"703e5710-b3b9-47db-92ff-3b24e4639c02\",\n    \"title\": \"good book2\",\n    \"count\": 1,\n    \"author\": \"willy\"\n  }\n]\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this collection doesn't exists\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1729904177242.5,
			"method": "GET",
			"modified": 1731006713679,
			"name": "get Records",
			"parameters": [],
			"parentId": "fld_e22ee03ebd9648cb9be5179c166993c7",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections/books/records?limit=2&skip=0",
			"_type": "request"
		},
		{
			"_id": "req_0fb8707bf54143adb6af1f9faf0e9716",
			"authentication": {},
			"body": {
				"mimeType": "application/json",
				"text": "{\n\t\"data\": {\n\t\t\"title\": \"good book2\",\n\t\t\"count\": 1,\n\t\t\"author\": \"willy\"\n\t}\n}"
			},
			"created": 1730656578097,
			"description": "**Description:** create new record\n\n### Request body format:\n\n```Json\n{\n\t\"data\": {\n\t\t\"title\": \"good book2\",\n\t\t\"count\": 1,\n\t\t\"author\": \"willy\"\n\t}\n}\n```\n\n**Requirements:**\n\n- \"data\" should be an non-empty object\n\n### Response body example:\n\n### 201 :\n\n```Json\n{\n  \"id\": \"f4bd1732-c78d-4535-988e-1f50808c406a\",\n  \"title\": \"good book2\",\n  \"count\": 1,\n  \"author\": \"willy\"\n}\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this collection doesn't exists\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n  }\n}\n```\n\n### 422 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": [\n      \"data must be a non-empty object\"\n    ],\n    \"error\": \"Unprocessable Entity\",\n    \"statusCode\": 422\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [
				{
					"id": "pair_7f4415f6541f4457a4f896dc0d7521c8",
					"name": "Content-Type",
					"value": "application/json"
				}
			],
			"isPrivate": false,
			"metaSortKey": -1729904177192.5,
			"method": "POST",
			"modified": 1731007308783,
			"name": "create a record",
			"parameters": [],
			"parentId": "fld_e22ee03ebd9648cb9be5179c166993c7",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections/books/records",
			"_type": "request"
		},
		{
			"_id": "req_80e61fc2a0614c8b8af22b15243c10ff",
			"authentication": {},
			"body": {},
			"created": 1730656635482,
			"description": "**Description:** get a record by id\n\n### Request url format:\n\n- /collections/:collectionName/records/:id\n\n**Requirements:**\n\n- \"collectionName\" should be between 3 to 20 characters\n- \"id\" should be uuid v4.\n\n### Response body example:\n\n### 200 :\n\n```Json\n{\n  \"id\": \"703e5710-b3b9-47db-92ff-3b24e4639c02\",\n  \"title\": \"good book2\",\n  \"count\": 1,\n  \"author\": \"willy\"\n}\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this collection doesn't exists\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n  }\n}\n```\n\n### 422 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": [\n      \"recordId must be a UUID\"\n    ],\n    \"error\": \"Unprocessable Entity\",\n    \"statusCode\": 422\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1729904177217.5,
			"method": "GET",
			"modified": 1731007282072,
			"name": "get a Record",
			"parameters": [],
			"parentId": "fld_e22ee03ebd9648cb9be5179c166993c7",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections/bs/records/703e5710-b3b9-47db-92ff-3b24e4639c02",
			"_type": "request"
		},
		{
			"_id": "req_2570f206aac74cfb8121ba5d81970849",
			"authentication": {},
			"body": {
				"mimeType": "application/json",
				"text": "{\n\t\"data\": {\n\t\t\"title\": \"bad book\",\n\t\t\"count\": 88,\n\t\t\"hamid\": \"salammmmm\"\n\t}\n}"
			},
			"created": 1730657258403,
			"description": "**Description:** updates a record\n\n### Request url format: \n- /collections/:collectionName/records/:id\n\n\n### Request body format:\n\n```Json\n{\n\t\"data\": {\n\t\t\"title\": \"bad book\",\n\t\t\"count\": 88,\n\t\t\"hamid\": \"salammmmm\"\n\t}\n}\n```\n\n**Requirements:**\n\n- \"data\" should be an non-empty object\n- \"collectionName\" should be between 3 to 20 characters\n- \"id\" should be uuid v4.\n\n### Response body example:\n\n### 200 :\n\n```Json\n{\n  \"id\": \"703e5710-b3b9-47db-92ff-3b24e4639c02\",\n  \"title\": \"bad book\",\n  \"count\": 88,\n  \"author\": \"willy\",\n  \"hamid\": \"salammmmm\"\n}\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this record doesn't exists\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n  }\n}\n```\n\n### 422 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": [\n      \"data must be a non-empty object\"\n    ],\n    \"error\": \"Unprocessable Entity\",\n    \"statusCode\": 422\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [
				{
					"id": "pair_7f4415f6541f4457a4f896dc0d7521c8",
					"name": "Content-Type",
					"value": "application/json"
				}
			],
			"isPrivate": false,
			"metaSortKey": -1729528027695.25,
			"method": "PUT",
			"modified": 1731007207934,
			"name": "update a record",
			"parameters": [],
			"parentId": "fld_e22ee03ebd9648cb9be5179c166993c7",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections/books/records/703e5710-b3b9-47db-92ff-3b24e4639c02",
			"_type": "request"
		},
		{
			"_id": "req_0b18d90d9bda41ab800f452b8172299c",
			"authentication": {},
			"body": {},
			"created": 1730657258607,
			"description": "**Description:** deletes a record\n\n### Request body format:\n\n- /collections/:collectionName/records/:id\n\n**Requirements:**\n\n- \"collectionName\" should be between 3 to 20 characters\n- \"id\" should be uuid v4.\n\n### Response body example:\n\n### 200 :\n\n```Json\n{\n  \"message\": \"record deleted.\",\n  \"record\": {\n    \"id\": \"acd44b1a-a531-43c1-8f65-57d4e1b44a3b\",\n    \"title\": \"good book2\",\n    \"count\": 1,\n    \"author\": \"willy\"\n  }\n}\n```\n\n### 404 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": \"this record doesn't exists\",\n    \"error\": \"Not Found\",\n    \"statusCode\": 404\n  }\n}\n```\n\n### 422 :\n\n```json\n{\n  \"error\": true,\n  \"errorDetail\": {\n    \"message\": [\n      \"collectionName must be longer than or equal to 3 characters\"\n    ],\n    \"error\": \"Unprocessable Entity\",\n    \"statusCode\": 422\n  }\n}\n```\n\n### 500 :\n\n```json\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}\n```\n",
			"headers": [],
			"isPrivate": false,
			"metaSortKey": -1729339952946.625,
			"method": "DELETE",
			"modified": 1731007300660,
			"name": "delete a record",
			"parameters": [],
			"parentId": "fld_e22ee03ebd9648cb9be5179c166993c7",
			"settingDisableRenderRequestBody": false,
			"settingEncodeUrl": true,
			"settingMaxTimelineDataSize": 1000,
			"settingRebuildPath": true,
			"settingSendCookies": true,
			"settingStoreCookies": true,
			"url": "localhost:3000/collections/books/records/acd44b1a-a531-43c1-8f65-57d4e1b44a3b",
			"_type": "request"
		}
	]
}